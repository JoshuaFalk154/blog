# basic stuff
spring.application.name=blog
logging.level.org.springframework.security=DEBUG
# keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/blog
jwt.auth.converter.principle-attribute=sub
jwt.auth.converter.username=preferred_username
jwt.auth.converter.client-roles=swagger-ui
# database
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
# database-log
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5000/postgres
spring.datasource.username=postgres
spring.datasource.password=admin
spring.jpa.hibernate.ddl-auto=create-drop
# SwaggerUi
springdoc.swagger-ui.oauth.client-id=swagger-ui
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
#springdoc.oAuthFlow.authorizationUrl=http://localhost:8181/realms/master/protocol/openid-connect/auth
springdoc.oAuthFlow.authorizationUrl=http://localhost:8181/realms/blog/protocol/openid-connect/auth
springdoc.oAuthFlow.tokenUrl=http://localhost:8181/realms/blog/protocol/openid-connect/token

